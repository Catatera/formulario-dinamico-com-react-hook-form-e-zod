// Uso da Biblioteca React Hook Form e Zod

Todo o formulário deverá ser "regido" pela biblioteca React Hook Form.
A validação deverá ser "regida" pela biblioteca Zod.
A validação dos dados deverá ocorrer no front-end de acordo com as regras estipuladas:
; name: obrigatório, máximo de 255 caracteres.
; email: obrigatório, deve ser um e-mail válido, máximo de 255 caracteres.
; password: obrigatório, mínimo de 8 caracteres, máximo de 255 caracteres.
APLICAR REGEX DE EMAIL
password_confirmation: obrigatório, mínimo de 8 caracteres, máximo de 255 caracteres.
terms: obrigatório, deve ser um booleano.
phone: obrigatório, máximo de 20 caracteres.
cpf: obrigatório, máximo de 14 caracteres, deve seguir o padrão 000.000.000-00, deve ser um CPF válido.
zipcode: obrigatório, máximo de 9 caracteres, deve seguir o padrão 00000-000.
address: obrigatório, máximo de 255 caracteres.
city: obrigatório, máximo de 255 caracteres.
Todos os dados devem ser submetidos de uma vez só para o endpoint da API do Codante.
Informação
Informação

Zod é uma biblioteca de validação que funciona tanto no node como em browsers. Esse projeto é um SPA, o que significa que iremos usar apenas no browser (client side).

// Implementação de validação server-side

Além da validação client-side, a nossa API também implementa uma validação server-side. Um exemplo que pode ser explorado é o caso do campo cpf: na validação client-side vamos checar apenas o "formato" do CPF, enquanto na validação server-side da API também checamos se o CPF é válido pelo seu dígito verificador.

Implemente, além da validação client-side, também as mensagens de erro de validação retornadas pela API.